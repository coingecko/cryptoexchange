c
output
ticker
c
quit
ticker
output
n
quit
pair["trade_amount"]*pair["last_price"]
pair["trade_amount"]*pair["last24_price"]
pair["trade_volume"]*pair["last24_price"]
pair["trade_volume"]*pair["last_price"]
pair["trade_volume"]*pair[
market_pair
pair
quit
output[0]["currency"].split("-")
output[0]["currency"]
output[0]
output.count
raw_output["krw_market"].count
raw_output["btc_market"].count
raw_output["btc_market"]
raw_output[1]
raw_output
output.count
output
quit
output.count
output
n
output
quit
output.last
output.first
output.count
output
quit
output
market[1]
raw_output.count
raw_output
quit
output.count
output
quit
market
pair
quit
market
c
market
c
output.last
output.first
output.count
output
c
output.count
output
c
market
quit
raw_output.first
raw_output[0]
raw_output
output.last
output
c
output.count
quit
output.last[0]
output.last
output.laar
output.count
output
c
market[0]
market[0] == "btc_market" || "krw_market"
n
market[0] == "btc_market" || "krw_market"
market
output.count
output
market
c
market
market[0] == "btc_market" || "krw_market"
n
c
market[0]
market.name
market
quit
output
n
quit
output["btc_market"]
output.count
output.second
output.first
output["krw_market"]
output["market_price"]
output[1]
output.inspect
output.each do |pair| puts pair end
output[0]
output
n
quit
Time.at(1517127829190/1000)
Time.at(now/1000)
Time.at(now/1000).utc
Time.at(now).utc
Time.at(now)
now.utc
now = (Time.now.to_f * 1000).to_i
now = Time.now.to_f * 1000).to_i
(Time.now.to_f * 1000)
(Time.now.to_f * 1000).to_i
Time.now.to_f * 1000).to_i
output
n
quit
Date.at(1517126882307)
Time.at(1517126882307)
require 'date'
1517126882307.utc
Time.now
now = Time.now.to_i
Time.now.to_i
output
n
quit
ticker_url
output
n
quit
output
n
c
n
c
n
quit
super(ticker_url)
quit
market_pairs
c
n
market_pairs
c
pair
n
pair
base
