quit
adapt_all(output, pairs_dictionary)
pairs_dictionary
quit
adapt_all(output)
adapt_all(output, pairs_dictionary)
c
ticker
quit
market
ticker
quit
c
ticker
c
quit
c
n
market_pair
ticker
c
market.fetch
market
n
quit
market
market.fetch
n
pairs_dictionary
output
c
market.fetch
n
market_class.new
n
c
market.fetch
market
market_class.new
market.fetch
n
market_class
n
c
adapt_all(output, pairs_dictionary)
pairs_dictionary[0]
pairs_dictionary
pairs_output
output
n
c
n
   27:           t.base.casecmp(market_pair.nbase) == 0
tickers.find do |t|
market_pair
output
market.fetch
tickers
n
c
quit
tickers
t
n
output
n
output
n
c
output
n
output
n
c
market.fetch
n
market_class
n
exchange
c
tickers[0]
tickers
t
tickers.find do |t| t.base end
t
tickers.find do |t|t.base.casecmp(market_pair.base) == 0 end
n
c
n
   27:           t.base.casecmp(market_pair.base) == 0n
tickers.find do |t|
tickers = market.fetch
n
market_class.supports_individual_ticker_query?
n
c
n
market.fetch
n
market
n
Object.const_get(market_classname)
market_class
n
market_classname
n
market_pair
exchange
ticker
ticker.bid
n
c
ticker
c
market_pair
ticker
c
output
n
c
cc
c
n
market_pair.target
market_pair.base
market_pair
n
target
base
n
pair_object[0]["quotingAssetId"]
pair_object[0]["baseAssetId"]
pair_object
n
pair_object = pairs_dictionary.select{|pair| pair["id"] == ticker["assetPair"]}
pairs_dictionary.select{|pair| pair["id"] == ticker["assetPair"]}
pairs_dictionary[0]
pairs_dictionary.find[0]
pairs_dictionary.find["AUDUSD"]
pairs_dictionary
pair_object
pairs_dictionary.any?{|match| match["id"] == ticker["assetPair"]}
match
n
ticker["assetPair"]
ticker
c
market_pair
t.base
t
c
nc
n
c
n
c
nc
n
t.target.casecmp(market_pair.target) == 0
t.base.casecmp(market_pair.base) == 0
market_pair.base
market_pair
t.base
t
n
c
nc
n
